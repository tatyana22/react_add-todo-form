{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getTodoId","Math","max","getUserById","userId","usersFromServer","find","todoWithUser","App","useState","setTodos","hasTitleError","setHasTitleError","hasUserIdError","setHasUserIdError","todoTitle","setTodoTitle","todoUserId","setTodoUserId","method","onSubmit","event","preventDefault","trimTitle","trim","newTodo","currentTodos","type","value","placeholder","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba387692.chunk.js","sourcesContent":["import React from 'react';\nimport { User } from '../../react-app-env';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto: ${user.email}`}>\n    {user.name}\n  </a>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { TodoWithUser } from '../../react-app-env';\n\ntype Props = {\n  todo: TodoWithUser;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id, title, user, completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoWithUser } from '../../react-app-env';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo todo={todo} key={todo.id} />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { TodoList } from './components/TodoList';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser } from './react-app-env';\n\nconst getTodoId = (todos: TodoWithUser[]) => {\n  const id = Math.max(...todos.map(todo => todo.id));\n\n  return id + 1;\n};\n\nconst getUserById = (userId: number) => {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todoWithUser: TodoWithUser[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<TodoWithUser[]>(todoWithUser);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoUserId, setTodoUserId] = useState(0);\n\n  const resetForm = () => {\n    setTodoTitle('');\n    setTodoUserId(0);\n  };\n\n  const handlFromSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const trimTitle = todoTitle.trim();\n\n    setHasTitleError(!trimTitle);\n    setHasUserIdError(!todoUserId);\n\n    if (!trimTitle || !todoUserId) {\n      return;\n    }\n\n    const newTodo: TodoWithUser = {\n      id: getTodoId(todos),\n      title: todoTitle,\n      completed: false,\n      userId: todoUserId,\n      user: getUserById(todoUserId),\n    };\n\n    if (!hasTitleError && !hasTitleError) {\n      setTodos(currentTodos => [...currentTodos, newTodo]);\n      resetForm();\n    }\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setTodoUserId(+event.target.value);\n    setHasTitleError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        method=\"POST\"\n        onSubmit={handlFromSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={todoTitle}\n            placeholder=\"Enter a title\"\n            onChange={handleInput}\n          />\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>)}\n\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={todoUserId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(user => (\n              <option value={user.id} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>)}\n\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}